{"version":3,"file":"contextmenu.js","sourceRoot":"file:///Users/andriusk/Beta/vs/coder/vscode39/src","sources":["vs/base/browser/contextmenu.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAehG,MAAa,cAAe,SAAQ,oBAAa;QAChD,YAAY,KAAa,EAAS,OAAwC;YACzE,KAAK,CAAC,KAAK,EAAE,OAAO,EAAE,gBAAgB,CAAC,CAAC;YADP,YAAO,GAAP,OAAO,CAAiC;QAE1E,CAAC;KACD;IAJD,wCAIC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IAction, IActionRunner } from 'vs/base/common/actions';\nimport { IActionViewItem } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { ResolvedKeybinding } from 'vs/base/common/keyCodes';\nimport { SubmenuAction } from 'vs/base/browser/ui/menu/menu';\nimport { AnchorAlignment } from 'vs/base/browser/ui/contextview/contextview';\n\nexport interface IContextMenuEvent {\n\tshiftKey?: boolean;\n\tctrlKey?: boolean;\n\taltKey?: boolean;\n\tmetaKey?: boolean;\n}\n\nexport class ContextSubMenu extends SubmenuAction {\n\tconstructor(label: string, public entries: Array<ContextSubMenu | IAction>) {\n\t\tsuper(label, entries, 'contextsubmenu');\n\t}\n}\n\nexport interface IContextMenuDelegate {\n\tgetAnchor(): HTMLElement | { x: number; y: number; width?: number; height?: number; };\n\tgetActions(): ReadonlyArray<IAction | ContextSubMenu>;\n\tgetActionViewItem?(action: IAction): IActionViewItem | undefined;\n\tgetActionsContext?(event?: IContextMenuEvent): any;\n\tgetKeyBinding?(action: IAction): ResolvedKeybinding | undefined;\n\tgetMenuClassName?(): string;\n\tonHide?(didCancel: boolean): void;\n\tactionRunner?: IActionRunner;\n\tautoSelectFirstItem?: boolean;\n\tanchorAlignment?: AnchorAlignment;\n}\n"]}