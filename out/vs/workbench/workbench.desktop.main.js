/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
define(["require", "exports", "vs/platform/instantiation/common/extensions", "vs/platform/credentials/common/credentials", "vs/platform/credentials/node/credentialsService", "vs/workbench/electron-browser/parts/titlebar/titlebarPart", "vs/workbench/services/title/common/titleService", "vs/workbench/workbench.common.main", "vs/workbench/electron-browser/desktop.contribution", "vs/workbench/electron-browser/desktop.main", "vs/workbench/services/dialogs/electron-browser/fileDialogService", "vs/workbench/services/integrity/node/integrityService", "vs/workbench/services/textMate/electron-browser/textMateService", "vs/workbench/services/search/node/searchService", "vs/workbench/services/output/electron-browser/outputChannelModelService", "vs/workbench/services/textfile/electron-browser/nativeTextFileService", "vs/workbench/services/dialogs/electron-browser/dialogService", "vs/workbench/services/keybinding/electron-browser/nativeKeymapService", "vs/workbench/services/keybinding/electron-browser/keybinding.contribution", "vs/workbench/services/extensions/electron-browser/extensionService", "vs/workbench/services/contextmenu/electron-browser/contextmenuService", "vs/workbench/services/extensionManagement/electron-browser/extensionManagementServerService", "vs/workbench/services/extensionManagement/electron-browser/extensionTipsService", "vs/workbench/services/remote/electron-browser/remoteAgentServiceImpl", "vs/workbench/services/telemetry/electron-browser/telemetryService", "vs/workbench/services/configurationResolver/electron-browser/configurationResolverService", "vs/workbench/services/extensionManagement/node/extensionManagementService", "vs/workbench/services/accessibility/electron-browser/accessibilityService", "vs/workbench/services/remote/node/tunnelService", "vs/workbench/services/backup/node/backupFileService", "vs/workbench/services/url/electron-browser/urlService", "vs/workbench/services/workspaces/electron-browser/workspacesService", "vs/workbench/services/workspaces/electron-browser/workspaceEditingService", "vs/workbench/services/userDataSync/electron-browser/storageKeysSyncRegistryService", "vs/workbench/services/userDataSync/electron-browser/userDataSyncService", "vs/workbench/services/userDataSync/electron-browser/userDataAutoSyncService", "vs/workbench/services/authentication/electron-browser/authenticationTokenService", "vs/workbench/services/authentication/browser/authenticationService", "vs/workbench/services/host/electron-browser/desktopHostService", "vs/workbench/services/request/electron-browser/requestService", "vs/workbench/services/lifecycle/electron-browser/lifecycleService", "vs/workbench/services/sharedProcess/electron-browser/sharedProcessService", "vs/workbench/services/electron/electron-browser/electronService", "vs/workbench/services/localizations/electron-browser/localizationsService", "vs/workbench/services/clipboard/electron-browser/clipboardService", "vs/workbench/services/update/electron-browser/updateService", "vs/workbench/services/issue/electron-browser/issueService", "vs/workbench/services/menubar/electron-browser/menubarService", "vs/workbench/services/extensionResourceLoader/electron-browser/extensionResourceLoaderService", "vs/workbench/services/path/electron-browser/pathService", "vs/workbench/contrib/localizations/browser/localizations.contribution", "vs/workbench/contrib/logs/electron-browser/logs.contribution", "vs/workbench/contrib/tags/electron-browser/workspaceTagsService", "vs/workbench/contrib/tags/electron-browser/tags.contribution", "vs/workbench/contrib/splash/electron-browser/partsSplash.contribution", "vs/workbench/contrib/files/electron-browser/files.contribution", "vs/workbench/contrib/files/electron-browser/fileActions.contribution", "vs/workbench/contrib/backup/electron-browser/backup.contribution", "vs/workbench/contrib/debug/node/debugHelperService", "vs/workbench/contrib/debug/electron-browser/extensionHostDebugService", "vs/workbench/contrib/webview/electron-browser/webview.contribution", "vs/workbench/contrib/notebook/electron-browser/notebook.contribution", "vs/workbench/contrib/extensions/electron-browser/extensions.contribution", "vs/workbench/contrib/terminal/electron-browser/terminal.contribution", "vs/workbench/contrib/remote/electron-browser/remote.contribution", "vs/workbench/contrib/codeEditor/electron-browser/codeEditor.contribution", "vs/workbench/contrib/externalTerminal/node/externalTerminalService", "vs/workbench/contrib/performance/electron-browser/performance.contribution", "vs/workbench/contrib/cli/node/cli.contribution", "vs/workbench/contrib/themes/test/electron-browser/themes.test.contribution", "vs/workbench/contrib/issue/electron-browser/issue.contribution", "vs/workbench/contrib/tasks/electron-browser/taskService", "vs/workbench/contrib/userDataSync/electron-browser/userDataSync.contribution", "vs/workbench/contrib/welcome/telemetryOptOut/electron-browser/telemetryOptOut.contribution", "vs/workbench/contrib/configExporter/electron-browser/configurationExportHelper.contribution"], function (require, exports, extensions_1, credentials_1, credentialsService_1, titlebarPart_1, titleService_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    extensions_1.registerSingleton(credentials_1.ICredentialsService, credentialsService_1.KeytarCredentialsService, true);
    extensions_1.registerSingleton(titleService_1.ITitleService, titlebarPart_1.TitlebarPart);
});
//#endregion
//# sourceMappingURL=workbench.desktop.main.js.map